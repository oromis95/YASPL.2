head
	int choice,intResult;
	int num1,num2;

	def addInt (int intAdded1 , intAdded2; ) : int intSum;
	{
		int intSum;
 		intSum=intAdded1+intAdded2;
	};
	def moltiplicationInt(int intMoltiplicator1,intMoltiplicator2;): int intProduct;
	{
		int intProduct,count;
		intProduct=0;
        count=0;
		while(not(count==intMoltiplicator2)) do
		{
		    addInt(intProduct,intMoltiplicator1:intProduct);
		    count=count+1;
		};
	};
	def divisionInt(int div1,div2;): int intQuotient;
    	{
    		int  intQuotient;
            intQuotient=div1/div2;
    	};
    def powFunc(int base,exponent;): int intPow;
    {
        int intPow,count,temp;
        count=0;
        intPow=1;
        while(not(count==exponent)) do {
            moltiplicationInt(intPow,base:intPow);
            count=count+1;
        };
    };
    def fibonacci(int end;): int result;
    {
        int a,b,temp,count;
        a=1;
        b=1;
        count=0;
        while(not(count==end)) do{
            temp=a+b;
            b=a;
            a=temp;
            a->;
            " "->;
            count=count+1;
        };
        result=4;

    };
start
choice=0;
while(not(choice==-1)) do
{
"  0 Addizione 1  Moltiplicazione 2 Divisione 3 Potenza " ->;
choice<-int;
	if(choice==0) then
	{
	    "Inserisci i due numeri : "->;
	    num1<-int;
	    num2<-int;
        addInt(num1,num2:intResult);
        "Risultato "->;
        intResult->;
	}
	else
	{
		if(choice==1) then
		{
            "Inserisci i due numeri : "->;
            num1<-int;
            num2<-int;
            moltiplicationInt(num1,num2:intResult);
            "Risultato "->;
            intResult->;
		}else{
		    if(choice==2)then{
                "Inserisci i due numeri : "->;
                num1<-int;
                num2<-int;
                divisionInt(num1,num2:intResult);
                "Risultato "->;
                intResult->;
		    }else{
		        if(choice==3)then{
		            "Inserisci prima la base poi l'esponente "->;
		            num1<-int;
                    num2<-int;
                    powFunc(num1,num2:intResult);
                    "Risultato "->;
                    intResult->;
		        }else{
		            if(choice==4)then{
		            "Inserisca quanti numeri di fibonacci vuole "->;
		            num1<-int;
		            fibonacci(num1:intResult);
		            };

		        };
		    };
		};
	};
};

